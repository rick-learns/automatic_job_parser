name: Daily Job Update

on:
  schedule:
    # Run daily at 8:12 AM UTC (matches your cron schedule)
    - cron: '12 8 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  update-jobs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Check if workflow should run (14-day limit)
        id: check_date
        uses: actions/cache@v4
        with:
          path: .workflow-start-date
          key: workflow-start-date-${{ github.ref }}
      - name: Create start date marker if it doesn't exist
        if: steps.check_date.outputs.cache-hit != 'true'
        run: date +%s > .workflow-start-date
      - name: Calculate days since start
        id: days_check
        run: |
          if [ -f .workflow-start-date ]; then
            START_DATE=$(cat .workflow-start-date)
            CURRENT_DATE=$(date +%s)
            DAYS_ELAPSED=$(( ($CURRENT_DATE - $START_DATE) / 86400 ))
            echo "days_elapsed=$DAYS_ELAPSED" >> $GITHUB_OUTPUT
            echo "Days elapsed: $DAYS_ELAPSED / 14"
          else
            echo "days_elapsed=0" >> $GITHUB_OUTPUT
            echo "Days elapsed: 0 / 14"
          fi
      - name: Skip if 14 days have passed
        if: steps.days_check.outputs.days_elapsed >= 14
        run: |
          echo "Workflow has been running for 14 days. Stopping execution."
          echo "To resume, delete the workflow cache or run manually with workflow_dispatch."
          exit 1
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Debug directory structure
        run: ls -la && echo "---" && ls -la jobsite_golang/ && echo "---" && ls -la jobsite_golang/cmd/
          
      - name: Build jobsite
        working-directory: ./jobsite_golang
        run: go build -o jobsite ./cmd/jobsite
        
      - name: Create required directories
        working-directory: ./jobsite_golang
        run: |
          mkdir -p data
          mkdir -p public
          mkdir -p public/latest
      
      - name: Restore database from cache
        uses: actions/cache@v4
        with:
          path: jobsite_golang/data/jobs.sqlite
          key: jobsite-db-${{ github.ref }}
          restore-keys: |
            jobsite-db-${{ github.ref }}-
        
      - name: Load environment and run daily update
        env:
          SERPER_API: ${{ secrets.SERPER_API }}
          BASE_URL: ${{ secrets.BASE_URL }}
          SITE_TITLE: ${{ secrets.SITE_TITLE }}
          PUBLIC_DIR: public
          DB_PATH: data/jobs.sqlite
        working-directory: ./jobsite_golang
        run: |
          ./jobsite daily
          
      - name: Save start date marker to cache
        uses: actions/cache@v4
        with:
          path: .workflow-start-date
          key: workflow-start-date-${{ github.ref }}
          
      - name: Save database to cache
        uses: actions/cache@v4
        with:
          path: jobsite_golang/data/jobs.sqlite
          key: jobsite-db-${{ github.ref }}-${{ github.run_number }}
          
      - name: Upload generated site
        uses: actions/upload-artifact@v4
        with:
          name: public-site
          path: jobsite_golang/public/
          retention-days: 30

